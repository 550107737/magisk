#include <stdio.h>

#include <rtai.h>
#include <rtai_nam2num.h>
#include <rtai_shm.h>
#include <sys/msg.h>

#define BUFFER 50

int *in;

int *buffer;

int out = 0;

struct mymsgbuf {
	long mtype;
	int data[BUFFER];
}message;



int read1(void) 
{
	int result = buffer[out];
	out++;
	if (out == BUFFER) 
	{
		out = 0;
	}
	return result;
}

int main(void)
{
	buffer= rtai_malloc(nam2num("shmem0"), sizeof(int)*BUFFER);
	in = rtai_malloc(nam2num("shmem1"), sizeof(int));   
    int i;
	int status;
	int queue;
	key_t msgkey;

	msgkey = ftok(".haha", 'm2');

	queue = msgget(msgkey, 0660 | IPC_CREAT );
	
	message.mtype = 1;

	while (1)
	{ 
            if(*in==BUFFER-1)
            {
                for(i=0;i<BUFFER;i++)
                {                
                    message.data[i] = read1();
                    printf("data[%d] is %d\n", i,message.data[i]);
					//msgsnd(queue, &message, sizeof(message.data),0);
                }
            }
		   
	}
	rtai_free(nam2num("shmem0"), *buffer);
	rtai_free(nam2num("shmem1"), *in);
	//rtai_free(nam2num("shmem2"), *mem2);
	

	return 0;
}
